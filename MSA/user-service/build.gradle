plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.8'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '1.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.5")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // h2
    implementation 'com.h2database:h2'
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //javax validation constraints
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // com.sun.xml.bind
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.2'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.2'
    // javax.xml.bind
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    // springcloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    // bootstrap
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //bus.amqp
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    // openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // Resilience4j
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    // zipkin
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    //micrometer
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    //prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
