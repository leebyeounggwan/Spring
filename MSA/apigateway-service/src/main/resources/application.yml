server:
  port: 8000

eurka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Default Filter
            preLogger: true
            postLogger: true
      routes:
#          - id: user-service
#            uri: lb://USER-SERVICE
#            predicates:
#              - Path=/user-service/**
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/login
              - Method=POST # POST 방식 요청
            filters:
              - RemoveRequestHeader=Cookie  # 요청 헤더에 있는 쿠키를 제거
              - RewritePath=/user-service/(?<segment>.*), /$\{segment} # /user-service/login -> /login
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/users
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/actuator/**
              - Method=GET, POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: user-service
            uri: lb://USER-SERVICE
            predicates:
              - Path=/user-service/**
              - Method=GET
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#              - AuthorizationHeaderFilter
          - id: catalog-service
            uri: lb://CATALOG-SERVICE
            predicates:
              - Path=/catalog-service/**
          - id: order-service
            uri: lb://ORDER-SERVICE
            predicates:
              - Path=/order-service/**
              - Method=GET, POST
          - id: order-service
            uri: lb://ORDER-SERVICE
            predicates:
              - Path=/order-service/actuator/**
              - Method=GET
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/order-service/(?<segment>.*), /$\{segment}
#          - id: first-service
#            uri: lb://MY-FIRST-SERVICE # 요청(predicates)이 들어오면 이 uri로 보내라
#            predicates: # 조건(사용자가 요청한 url)
#              - Path=/first-service/**
#            filters: # 요청에 대한 처리
#              - CustomFilter
#          - id: second-service
#            uri: lb://MY-SECOND-SERVICE
#            predicates:
#              - Path=/second-service/**
#            filters:
#               - name: CustomFilter
#               - name: LoggingFilter
#                 args:
#                   baseMessage: Hi, there.
#                   preLogger: true
#                   postLogger: true

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, http-exchanges, bus-refresh, info, metrics, prometheus

#token:
#  secret: mySecret
